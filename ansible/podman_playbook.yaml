---
- name: Podman - webserver
  hosts: vm
  remote_user: azureuser
  become: true
  vars_files:
    - vars/vars_ansible.yaml
  tasks:
      - name: Building image
        containers.podman.podman_image:
          name: webserver:latest
          path: /usr/local/webserver/
          build:
            format: docker

      - name: Tag image 
        containers.podman.podman_tag:
          image: localhost/webserver:latest
          target_names:
            - containerregistryunir2.azurecr.io/webserver:casopractico2

      - name: Login to registry
        containers.podman.podman_login:
          username: "{{acr_username}}"
          password: "{{acr_pass}}"
          registry: "{{acr_name}}"
      
      - name: Push to registry
        containers.podman.podman_image:
          name: containerregistryunir2.azurecr.io/webserver:casopractico2
          push: yes
          push_args:
            dest: "{{acr_name}}"

      - name: Create container
        containers.podman.podman_container:
          name: webserver
          image: containerregistryunir2.azurecr.io/webserver:casopractico2
          ports: "8080:443"
          state: present

      - name: Generate systemd fle
        ansible.builtin.command:
          cmd: podman generate systemd --files --name webserver
      - name: Copy file to systemd directory
        ansible.builtin.copy:
          remote_src: yes
          src: ./container-webserver.service
          dest: /etc/systemd/system/container-webserver.service

      - name: Systemd_ reload daemon and enable webserver as a service.
        ansible.builtin.systemd:
          daemon_reload: true     
          name: container-webserver
          enabled: true
          state: started

      - name: Installing firewall
        ansible.builtin.apt:
          update_cache: yes
          name: firewalld 
      - name: Expose webserver to web'
        ansible.posix.firewalld:
          state: enabled
          port: 8080/tcp
          zone: public